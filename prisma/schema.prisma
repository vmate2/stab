generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Stabtagok {
  id        Int     @id @default(autoincrement())
  uuid      String  @unique
  name      String
  dob       DateTime?
  school    String?
  paidcash  Int     @default(0)
  post      String
  email     String  @unique
  phone     String @unique
  city      String?

  @@map("stabtagok")
}

model users {
  id              Int      @id @default(autoincrement())
  uuid            String   @unique
  username        String
  password        String
  createdAt       DateTime @default(now()) 
  modifiedAt      DateTime @updatedAt
  config          Json @default("{\"lang\": \"hu\", \"theme\": \"dark\", \"notificationsound\": true, \"keepLoggedIn\": true}")
}

model szponzorok {
  id              Int      @id @default(autoincrement())
  name            String
  email           String?
  phone           String?
  contact         String?
  status          String
  desc            String?
  type            String  @default("money")
  sentFirstLetter Boolean @default(false)
}



model tesztszponzorok {
  id              Int      @id @default(autoincrement())
  name            String
  email           String?
  phone           String?
  contact         String?
  status          String
  desc            String?
  type            String  @default("money")
  sentFirstLetter Boolean @default(false)
}



model polorendeles {
  id              Int      @id @default(autoincrement())
  name            String
  phone           String
  felirat         String?
  size            String
  paid            Boolean
  note            String?
  createdAt       DateTime @default(now())
}

model transactions {
  id              String @id @default(cuid())
  type            Int
  amount          Int
  category        String
  title           String
  desc            String?
  date            DateTime @default(now())
  userId          String
}

model stabcash {
  id              Int    @id
  balance         BigInt
  income          Int @default(0)
  expense         Int @default(0)
}

model Log {
  id        Int      @id @default(autoincrement())
  title     String
  type      String
  level     String
  data      Json?
  userId    String?
  username  String?
  ip        String?
  timestamp DateTime @default(now())
}

model wheelWin {
  id        Int      @id @default(autoincrement())
  type      String
  amount    Int
  name      String
  email     String
  qrcode    String
  winID     String   @unique
  isClaimed Boolean  @default(false)
  createdAt DateTime @default(now())
  claimedAt DateTime? @updatedAt
}

model locations {
  username  String
  userID    String @unique
  longitude Float
  latitude  Float
  updatedAt DateTime @updatedAt
}


model Email {
  id        Int      @id @default(autoincrement())
  messageId String   @unique
  from      String?
  date      DateTime
  subject   String
  textBody  String?
  htmlBody  String?
  opened    Boolean  @default(false)
  to        String?
}